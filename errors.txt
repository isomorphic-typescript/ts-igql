(parameter) q: ObjectQuery<{
    test66: Type<"HelloWorld", IsNotInputTrait, HasNoArgsTrait, IsObjectTrait<{}>, IsNotScalarTrait>;
}, QueryResult<...>>
Type 'ObjectQuery<{ test66: Type<"HelloWorld", IsNotInputTrait, HasNoArgsTrait, IsObjectTrait<{}>, IsNotScalarTrait>; }, QueryResult<...>>' is not assignable to type 'ObjectQuery<any, QueryResult<"Query", {}>>'.
  Type 'ObjectQuery<{ test66: Type<"HelloWorld", IsNotInputTrait, HasNoArgsTrait, IsObjectTrait<{}>, IsNotScalarTrait>; }, QueryResult<...>>' is not assignable to type '{ [x: string]: (<SubResponse, SubQueryResult extends QueryResult<any, SubResponse>>(args: GetArgsJsType<ArgumentsDef>, subQuery: (objectQuery: ObjectQuery<ObjectTypeDef, { typeName: any; response: {}; }>) => ObjectQuery<...>) => ObjectQuery<...>) | ((args: GetArgsJsType<...>) => ObjectQuery<...>) | (<SubResponse, Su...'.
    Property '__result' is incompatible with index signature.
      Type 'QueryResult<"Query", {}>' is not assignable to type '(<SubResponse, SubQueryResult extends QueryResult<any, SubResponse>>(args: GetArgsJsType<ArgumentsDef>, subQuery: (objectQuery: ObjectQuery<ObjectTypeDef, { typeName: any; response: {}; }>) => ObjectQuery<...>) => ObjectQuery<...>) | ((args: GetArgsJsType<...>) => ObjectQuery<...>) | (<SubResponse, SubQueryResult ex...'.
        Type 'QueryResult<"Query", {}>' is not assignable to type 'ObjectQuery<Pick<any, number | symbol>, QueryResult<"Query", { [x: string]: unknown; }>>'.
          Property '__result' is missing in type 'QueryResult<"Query", {}>' but required in type '{ __result: QueryResult<"Query", { [x: string]: unknown; }>; }'.ts(2322)
take-2-with-traits.ts(72, 92): '__result' is declared here.

(parameter) q: ObjectQuery<{
    test66: Type<"HelloWorld", IsNotInputTrait, HasNoArgsTrait, IsObjectTrait<{}>, IsNotScalarTrait>;
}, QueryResult<...>>
Type 'ObjectQuery<{ test66: Type<"HelloWorld", IsNotInputTrait, HasNoArgsTrait, IsObjectTrait<{}>, IsNotScalarTrait>; }, QueryResult<...>>' is not assignable to type 'ObjectQuery<any, QueryResult<"Query", {}>>'.
  Type 'ObjectQuery<{ test66: Type<"HelloWorld", IsNotInputTrait, HasNoArgsTrait, IsObjectTrait<{}>, IsNotScalarTrait>; }, QueryResult<...>>' is not assignable to type '{ [x: string]: (<SubResponse, SubQueryResult extends QueryResult<any, SubResponse>>(args: GetArgsJsType<ArgumentsDef>, subQuery: (objectQuery: ObjectQuery<ObjectTypeDef, { typeName: any; response: {}; }>) => ObjectQuery<...>) => ObjectQuery<...>) | ((args: GetArgsJsType<...>) => ObjectQuery<...>) | (<SubResponse, Su...'.
    Property '__result' is incompatible with index signature.
      Type 'QueryResult<"Query", {}>' is not assignable to type '(<SubResponse, SubQueryResult extends QueryResult<any, SubResponse>>(args: GetArgsJsType<ArgumentsDef>, subQuery: (objectQuery: ObjectQuery<ObjectTypeDef, { typeName: any; response: {}; }>) => ObjectQuery<...>) => ObjectQuery<...>) | ((args: GetArgsJsType<...>) => ObjectQuery<...>) | (<SubResponse, SubQueryResult ex...'.
        Type 'QueryResult<"Query", {}>' is not assignable to type 'ObjectQuery<Pick<any, number | symbol>, QueryResult<"Query", { [x: string]: unknown; }>>'.
          Property '__result' is missing in type 'QueryResult<"Query", {}>' but required in type '{ __result: QueryResult<"Query", { [x: string]: unknown; }>; }'.ts(2322)
take-2-with-traits.ts(72, 92): '__result' is declared here.
take-2-with-traits.ts(121, 16): The expected type comes from the return type of this signature.